//assignment 1
#include <stdio.h>
void printPattern2(int height);
int main()
{
 int height;
 printf("Enter the height: \n");
 scanf("%d", &height);
 printf("printPattern2(): \n");
 printPattern2(height);
 return 0;
}
void printPattern2(int height)
{
    int j, k;
    char i;
    for(j =1; j <=height; j++){
        switch(j%2){
        case 0 :
            for(k=0;k<j;k++){
                i = (k%2 ==0? 'A' : 'B');
                printf("%c", i);}printf("\n");
                break;
        default :
            for(k=0;k<j;k++){
                i = (k%2 ==0? 'B' : 'A');
                printf("%c", i);}printf("\n");
                break;
            }
        }
}
//end of assignment 1

//assignment 2
#include <stdio.h>
int countEvenDigits1(int number);
void countEvenDigits2(int number, int *count);
int main()
{
 int number, result;

 printf("Enter a number: \n");
 scanf("%d", &number);
 printf("countEvenDigits1(): %d\n", countEvenDigits1(number));
 countEvenDigits2(number, &result);
 printf("countEvenDigits2(): %d\n", result);
 return 0;
}
int countEvenDigits1(int number)
{
    int num = number, sum=0;
    while(num != 0){
    if(num % 2 == 0){
        sum += 1;
    }num = num/10;
    }return sum;
}
void countEvenDigits2(int number, int *count)
{
    int num = number, sum=0;
    while(num != 0){
    if(num % 2 == 0){
        sum += 1;
    }num = num/10;
    } *count = sum;
}
//end of assignment 2

//assignment3 but char input not considered
#include <stdio.h>
#define SIZE 10
#define INIT_VALUE 999
int symmetry2D(int M[][SIZE], int rowSize, int colSize);
int main()
{
 int M[SIZE][SIZE],i,j, result = INIT_VALUE;
 int rowSize, colSize;

 printf("Enter the array size (rowSize, colSize): \n");
 scanf("%d %d", &rowSize, &colSize);
 printf("Enter the matrix (%dx%d): \n", rowSize, colSize);
 for (i=0; i<rowSize; i++)
 for (j=0; j<colSize; j++)
 scanf("%d", &M[i][j]);
 result=symmetry2D(M, rowSize, colSize);
 if (result == 1)
 printf("symmetry2D(): Yes\n");
 else if (result == 0)
 printf("symmetry2D(): No\n");
 else
 printf("Error\n");
 return 0;
}
int symmetry2D(int M[][SIZE], int rowSize, int colSize)
{
    int i, j, flag=1;
    char c;
    for(i=0;i<rowSize;i++){
        for(j=0;j<colSize;j++){
            if(M[i][j]!=M[j][i]){
            printf("%d  %d\n", M[i][j], M[j][i]);
            flag=0;
            }
        }if(flag ==0){break;}
    }return flag;
}
//end of assignment 3
