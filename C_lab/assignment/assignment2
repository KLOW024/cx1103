	/*edit*/

/*custom header*/

	/*end_edit*/
#include <stdio.h>
#include <string.h>
#define N 20
char *longestStrInAr(char str[N][40], int size, int *length);
int main()
{
   int i, size, length;  
   char str[N][40], first[40], last[40], *p, *result;
   char dummychar;  
   
   printf("Enter array size: \n");
   scanf("%d", &size);
   scanf("%c", &dummychar);
   for (i=0; i<size; i++) {
      printf("Enter string %d: \n", i+1);
      fgets(str[i], 40, stdin);
      if (p=strchr(str[i],'\n')) *p = '\0';  
   } 
   result = longestStrInAr(str, size, &length);
   printf("longest: %s \nlength: %d\n", result, length);        
   return 0;
}
char *longestStrInAr(char str[N][40], int size, int *length)
{
	/*edit*/
    int i, j=0;

   char name[40];
   strcpy(name, str[0]);
   for(i=0;i<size;i++){
        if(strlen(str[i])> strlen(name)){
                strcpy(name, str[i]);
                j=i;
           }
       }*length = strlen(str[j]);

   return str[j];

	/*end_edit*/
}

//qn2 processstring
#include <stdio.h>
#include <string.h>
void processString(char *str, int *totVowels, int *totDigits);
int main()
{
 char str[50], *p;
 int totVowels, totDigits;
 printf("Enter the string: \n");
 fgets(str, 80, stdin);
 if (p=strchr(str,'\n')) *p = '\0';
 processString(str, &totVowels, &totDigits);
 printf("Total vowels = %d\n", totVowels);
 printf("Total digits = %d\n", totDigits);
 return 0;
}
void processString(char *str, int *totVowels, int *totDigits)
{
    /* Write your program code here */
    int i,j,k;
    *totVowels =0; *totDigits = 0;
    char vowels[12] = { "aeiouAEIOU" };
    char no_[12] = { "1234567890" };
    for(i=0;i<strlen(str);i++){
        for(j=0;j<10;j++){
            if(*(str+i) == vowels[j]){
                (*totVowels)++;
            }
        }
        for(k=0;k<10;k++){
            if(*(str+i) == no_[k]){
                //printf("the digits are %c\n", *(str+i));
                (*totDigits)++;
            }
        }
    }

} 


//qn3 countsubstr
#include <stdio.h>
#include <string.h>
#define INIT_VALUE -1
int countSubstring(char str[], char substr[]);
int main()
{
 char str[80], substr[80], *p;
 int result=INIT_VALUE;

 printf("Enter the string: \n");
 fgets(str, 80, stdin);
 if (p=strchr(str,'\n')) *p = '\0';
 printf("Enter the substring: \n");
 fgets(substr, 80, stdin);
 if (p=strchr(substr,'\n')) *p = '\0';
 result = countSubstring(str, substr);
 printf("countSubstring(): %d\n", result);
 return 0;
}
int countSubstring(char str[], char substr[])
{
    /* Write your code here */
    int count=0, i; 
    char dummy[80];
    for(i=0;i<strlen(str);i++){             //compares str[i:len] to substr
        strcpy(dummy,str+i);                //copies OG string into a temp str
        dummy[strlen(substr)] = '\0';       //at temp[substrlength] slice it
        if(strcmp(dummy,substr)==0){        //compare the temp to the substr
            count++;i+=(strlen(substr)-1);  //if same then add count and skip the ones that match
        }
    }return count;
 } 

//qn 4 employee
#include <stdio.h>
#include <string.h>
#define MAX 100
typedef struct {
   char name[40];
   char telno[40];
   int id;
   double salary;
} Employee;
void printEmp(Employee *emp, int size);
int readin(Employee *emp);
int search(Employee *emp, int size, char *target);
int addEmployee(Employee *emp, int size, char *target);
int main()
{
   Employee emp[MAX];
   char name[40], *p;
   int size, choice, result;
   
   printf("Select one of the following options: \n");
   printf("1: readin() \n");     
   printf("2: search() \n");
   printf("3: addEmployee() \n");
   printf("4: print() \n");
   printf("5: exit() \n");      
   do {
      printf("Enter your choice: \n");
      scanf("%d", &choice);
      switch (choice) {
         case 1:           
            size = readin(emp);        
            break;               
         case 2:           
            printf("Enter search name: \n");
            scanf("\n");
            fgets(name, 40, stdin);  
            if (p=strchr(name,'\n')) *p = '\0';
            result = search(emp,size,name);   
            if (result != 1) 
               printf ("Name not found! \n");     
            break;               
         case 3:           
            printf("Enter new name: \n");
            scanf("\n");
            fgets(name, 40, stdin);  
            if (p=strchr(name,'\n')) *p = '\0';
            result = search(emp,size,name);  
            if (result != 1)
               size = addEmployee(emp, size, name);     
            else 
               printf("The new name has already existed in the database\n");
            break;         
         case 4:
            printEmp(emp, size);
            break;
         default: 
            break;
      } 
   } while (choice < 5);
   return 0;
}
void printEmp(Employee *emp, int size) 
{
   int i;
   
   printf("The current employee list:\n");
   if (size==0) 
      printf("Empty array\n");
   else
   {
      for (i=0; i<size; i++) 
         printf("%s %s %d %.2f\n",emp[i].name,emp[i].telno,emp[i].id,
 	emp[i].salary); 
   }
}
int readin(Employee *emp)
{
	/*edit*/
   /* Write your code here */
   int size =0;
   char *p,dummy[80];
   fgets(dummy,80,stdin);
   while(1){
    printf("Enter name:\n");
    
    fgets(emp->name,40, stdin);
    if (p=strchr(emp->name,'\n'))*p = '\0'; //the 1st 'enter' wld equate to a null
    if (strcmp(emp->name,"#")==0)
        break;
    printf("Enter tel:\n");
    scanf("%s",&(emp->telno));
    fgets(dummy,80,stdin);
    printf("Enter id:\n");
    scanf("%d",&(emp->id));
    fgets(dummy,80,stdin);
    printf("Enter salary:\n");
    scanf("%lf",&(emp->salary));
    fgets(dummy,80,stdin);
    emp++;
    size++;
    
    }return size;
	/*end_edit*/
}
int search(Employee *emp, int size, char *target)
{
	/*edit*/
   /* Write your code here */
   int i;
   for(i=0;i<size;i++){
      if(strcmp(emp->name,target)==0){
         printf("Employee found at index location: %d\n",i);
         printf("%s %s %d %.2f\n", emp->name, emp->telno, emp->id, emp->salary);
         return 1;
      }emp++;
   }
   if(i==size)return 0;
   


	/*end_edit*/
}
int addEmployee(Employee *emp, int size, char *target)
{
	/*edit*/
   /* Write your code here */
   char dummy[80], ttelno[80];
   int tid; double tsalary;
   strcpy((emp+size)->name,target);
   printf("Enter tel:\n");
   scanf("%s", &ttelno);
   strcpy((emp+size)->telno, ttelno );
    fgets(dummy,80,stdin);
    printf("Enter id:\n");
    scanf("%d", &tid);
    (emp+size)->id = tid;
    fgets(dummy,80,stdin);
    printf("Enter salary:\n");
   scanf("%lf", &tsalary);
    (emp+size)->salary = tsalary;
    fgets(dummy,80,stdin);
   printf("Added at position: %d\n", (size));
   return size +1;



	/*end_edit*/
}
