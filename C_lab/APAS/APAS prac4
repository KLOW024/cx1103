//Ex4 Reverse1D
#include <stdio.h>
void printReverse1(int ar[], int size);
void printReverse2(int ar[], int size);
void reverseAr1D(int ar[], int size);
int main()
{
   int ar[10];
   int size, i;
      
   printf("Enter array size: \n");
   scanf("%d", &size);
   printf("Enter %d data: \n", size);
   for (i=0; i <= size-1; i++)
      scanf("%d", &ar[i]);
   printReverse1(ar, size);   
   printReverse2(ar, size);
   reverseAr1D(ar, size);
   printf("reverseAr1D(): ");
   if (size > 0) {
      for (i=0; i<size; i++)
         printf("%d ", ar[i]);
   }
   return 0;
}   
void printReverse1(int ar[], int size) 
{
   /* using index – Write your program code here */
   int i;
    printf("printReverse1(): ");
    for(i=size-1;i>=0;i--){
       printf("%d ",ar[i]);
   }printf("\n");
}
void printReverse2(int ar[], int size)
{
	/* using pointer – Write your program code here */
    int *j, i;
    j = &ar[0];
    printf("printReverse2(): ");
    for(i=0;i<size;i++){
       printf("%d ",*(j+size-1-i));
   }printf("\n");
}
void reverseAr1D(int ar[ ], int size)
{
   /* Write your program code here */
   int i;
   int ar_r[size];
   for(i=size-1;i>=0;i--){
       ar_r[size -1 -i] = ar[i];
   }
   for(i=0;i<size;i++){
       ar[i] = ar_r[i];
   }
}


//Ex6 mayTakeLeave
#include <stdio.h>
#define INIT_VALUE 1000
typedef struct {
   int id;           /* staff identifier */
   int totalLeave;   /* the total number of days of leave allowed */
   int leaveTaken;   /* the number of days of leave taken so far */
} leaveRecord;
int mayTakeLeave(leaveRecord list[], int id, int leave, int n);
void getInput(leaveRecord list[], int *n);
void printList(leaveRecord list[], int n);
int main()
{
   leaveRecord listRec[10];
   int len;
   int id, leave, canTake=INIT_VALUE;
   int choice;
   
   printf("Select one of the following options: \n");
   printf("1: getInput()\n");     
   printf("2: printList()\n");
   printf("3: mayTakeLeave()\n");
   printf("4: exit()\n"); 
   do {
      printf("Enter your choice: \n");
      scanf("%d", &choice);
      switch (choice) {
         case 1:  
            getInput(listRec, &len);
            printList(listRec, len);
            break;
         case 2:  
            printList(listRec, len);
            break;
         case 3:  
            printf("Please input id, leave to be taken: \n");
            scanf("%d %d", &id, &leave);
            canTake = mayTakeLeave(listRec, id, leave, len);
            if (canTake == 1)
               printf("The staff %d can take leave\n", id);
            else if (canTake == 0)
               printf("The staff %d cannot take leave\n", id); 
            else if (canTake == -1)
               printf("The staff %d is not in the list\n", id); 
            else
               printf("Error!");
            break;     
      }
   } while (choice < 4);    
   return 0;
}
void printList(leaveRecord list[], int n)
{
   int p;

   printf("The staff list:\n");
   for (p = 0; p < n; p++)
      printf ("id = %d, totalleave = %d, leave taken = %d\n", 
         list[p].id, list[p].totalLeave, list[p].leaveTaken);
}
void getInput(leaveRecord list[], int *n)
{
	/* Write your program code here */
	int i;
	printf("Enter the number of staff records: \n");
	scanf("%d", n);
	for(i=0;i<*n;i++){
	    printf("Enter id, totalleave, leavetaken: \n");
	    scanf("%d", &(list[i].id));
	    scanf("%d", &(list[i].totalLeave));
	    scanf("%d", &(list[i].leaveTaken));
	}
} 
int mayTakeLeave(leaveRecord list[], int id, int leave, int n)
{
	/* Write your program code here */
	int i=0;
	for(i=0;i<n;i++){
	    //printf("%d\n",list[i].id);
	    if(list[i].id==id){
	        if(list[i].totalLeave - list[i].leaveTaken >= leave)return 1;
	        else return 0;
	    }

	}return -1;
}
